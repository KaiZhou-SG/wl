Lesson 1: an introduction

1 A database not only stores dta, but also:
  1.1 provide an organizational structure for data.
  1.2 provide a mechanism for querying, creating, modifying, and deleting
data(CRUD).

2 Relational databases are designed to address many of the information
complexity issues that arise in business(comparing to using a List).
  2.1 In real world, data has essential complexity relationships(a List cannot
handle).
  2.2 Relational database is designed to address the relationships between the
realworld data.

3 A relational database stores information in tables. Each information
theme(business concept) is stored in its own table.
 3.1 Columns --> attributes of an entity; 
 3.2 Row --> an instance of an entity.

4 In essence, a relational database will break up a list into several parts
(break by business concepts).

5 So there is a task to reassemble parts when doing reports(using join).
 5.1 In a relational database, tables are joined together using matched pairs of
data values.

Lesson 2: the relational model

1 Entity(a single theme, topic, or a single business concept)
  --> An entity is something of importance to a user or organization that
needs to be represented in a database.
  --> In the entity-relationship model, entities are restricted to things that
can be represented using a single table.

2 Relation(is a two-dimensional table, like a matrix, that has columns and
rows)
  2.1 Rows contain data about instances of an entity
  2.2 Columns contain data about attributes of an entity
  2.3 Cells of the table hold a single value
  2.4 All values in a column are of the same data type
  2.5 Each column has a unique name in one table(one relation)
  2.6 The order of the columns in unimportant
  2.7 Now two rows can be identical
  >> all relations are tables, but not all tables are relations

3 Keys
  3.1 unique keys
    >> identify one row within a relation
    >> primary key
    >> candidate key
    >> composite key
    >> surrogate key 
      --> A surrogate key is a unique, numeric value that is added to a
relation to serve as the primary key
      --> Surrogate key values have no meaning to user and are usually hidden
on forms, queries, and reports
      --> A surrogate key is often used in place of a composite primary key

  3.2 nonunique keys
    >> foreign key.

4 relationships between tables --> foreign key
  --> A foreign key is a primary key from one table that is placed into
another table.
  --> The key is called a foreign key in the table that receives the key.
  --> Foreign key defines relationships between tables, and help do
Referential Integrity Check.

5 Null values(a cell which has no data)
  --> Means no data in a cell
  --> Does not mean Zero or a blank character, an empty string or a tab
character.
 
6 Functional Dependency
  6.1 It's a relationship between attributes in which one attribute(or group
of attributes) determines the value of another attribute in the same table.
  --> such as, (Unit Price, Qty) --> BoxPrice
 

7 Data Normalization
  To avoid Data Anomalies:
  > Deletion anomalies
  > Update anomalies
  > Insertion anomalies

  Principles of normalization:
 7.1 determinant
   --> every determinant must be a candidate key, otherwise, the relation is
not well-formed
 7.2 any relation that is not well-formed should be broken into two or more
well-formed relations
 As a general rule, a well-formed relation will not encompass more than one
business concept.

8 How to break the NON 3rd normal form relation into 3rd normal form relations 
  8.1 Any valid relation is a 1st Normal Form(check what makes a valid
relation)
  8.2 All non unique key columns should dependent on the full primary key(not
partially), then the relation is in 2nd Normal Form
  8.3 No Transitive dependencies, then the relation is in 3rd Normal Form
    > Transitive dependencies is functional dependencies on non-primary-key
     attributes), which means, although it's in 2nd Normal Form, some
attributes acturally depends on non-primary keys instead of primary keys.
   In this case, we put the transitive attributes into a new table.
9   



